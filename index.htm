<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Grid Csv Large | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="jsc/jscharting.js"></script>

    <script type="text/javascript" src="jsc/modules/datagrid.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style>
      /*CSS*/
      #fixed-header-table {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        background-color:white;
      }
    </style>
  </head>
  <body>
    <p>Grid with 15K records</p>
    <div id="gridDiv" style="max-width: 740px; height: 400px; margin: 0px auto;"></div>
    <div id="fixed-header-table"></div>
    <script type="text/javascript">
      JSC.fetch('resources/wavebuoynetwork.csv').then(function (response) {
        if (response.ok) {
          response.text().then(function (text) {
            var parsedData = JSC.csv2Json(text);
            parsedData.headerCol = true;
            parsedData.columns = [
              { value: '{%time:date g}' },
              { value: '%PeakPeriod' },
              { value: '%PeakDirection' },
              { value: '%UpcrossPeriod' },
              { value: '%SignificantWaveHeight' },
              { value: '%SeaTemperature' },
            ];
            JSC.Grid('gridDiv', parsedData).then(function (grid) {
              // get first row
              var firstRow = grid.table.rows[0];
              // create a new table for fixed header
              var fixedHeaderTable = document.createElement('table');
              fixedHeaderTable.setAttribute('id', 'fixed-header-table');
              // append first row to the fixed header table
              fixedHeaderTable.appendChild(firstRow);
              // insert fixed header table before grid table
              grid.table.parentNode.insertBefore(fixedHeaderTable, grid.table);
              // sync fixed header table columns with grid table
              var gridTableHeader = grid.table.getElementsByTagName('thead')[0];
              var fixedHeaderTableHeader = fixedHeaderTable.createTHead();
              for (var i = 0; i < gridTableHeader.rows[0].cells.length; i++) {
                fixedHeaderTableHeader.rows[0].appendChild(gridTableHeader.rows[0].cells[i].cloneNode(true));
              }
              // sync fixed header table width with grid table
              fixedHeaderTable.style.tableLayout = 'fixed';
              fixedHeaderTable.style.width = grid.table.offsetWidth + 'px';
            });
          });
        } else {
          console.error('Problem loading csv data.');
        }
      });
    </script>
  </body>

