<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Circular Gauge Icon Layout Widgets | JSCharting</title>
    <meta http-equiv="content-type" content="text-html; charset=utf-8" />

    <script type="text/javascript" src="../jsc/jscharting.js"></script>

    <link rel="stylesheet" type="text/css" href="css/default.css" />
    <style>
      #widgetsWrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        background: #eeeeee;
        padding: 20px;
        box-sizing: border-box;
        width: 100%;
      }
      .chartDiv {
        width: 100%;
        background: white;
        box-sizing: content-box;
        margin: 8px;
        padding: 15px;
        border-radius: 10px;
      }
    </style>
  </head>
  <body>
    <div id="widgetsWrapper">
      <div id="chartDiv1" class="chartDiv" style="max-width: 220px; height: 110px;"></div>
      <div id="chartDiv2" class="chartDiv" style="max-width: 150px; height: 180px;"></div>
      <div id="chartDiv3" class="chartDiv" style="max-width: 220px; height: 110px;"></div>
    </div>

    <script type="text/javascript">
      /*
Circular gauge icon and value widgets with vertical and horizontal layouts.
Learn how to:

  - Use widgets with icons, different layouts and values inside.
*/
      // JS
      var chart1, chart2, chart3;

      /* WIDGET DEFINITION */

      /* Default Widget Options */
      var circularWidgetWidgetDefaults = {
        title: '',
        orientation: 'horizontal',
        data: { name: 'Value', value: 10, maxValue: undefined, icon: 'material/social/people' },
        color: 'black',
        valueFormat: 'n',
        valueLabel: '',
        showPercent: false,
      };

      /* Widget Constructor */
      function CircularGaugeWidget(div, options) {
        /* Config refers to JSC options, options refers to widget options. */
        this.currentConfig = this.normalizeOptions(JSC.merge({}, circularWidgetWidgetDefaults, options));
        this.chart = new JSC.chart(
          div,
          JSC.merge(
            {
              legend_visible: false,
              xAxis_defaultTick_gridLine_color: '#ECEFF1',
              yAxis_visible: false,
              defaultSeries: {
                type: 'gauge column roundcaps',
                angle: { sweep: 360, start: -90 },
                mouseTracking_enabled: false,
                shape_innerSize: '80%',
                defaultPoint: {
                  tooltip: '<b>%seriesName</b> %yValue% of Goal',
                  altColor: 'currentColor',
                  outline_width: 0,
                },
              },
            },
            this.currentConfig
          )
        );
      }

      /**
       * Returns chart configuration only for specified options.
       * @param options - Widget options.
       * @returns {{}} - Chart configuration.
       */
      CircularGaugeWidget.prototype.normalizeOptions = function (options) {
        var result = {};
        if (options.title) {
          result.title = {
            title: {
              margin_bottom: 15,
              label: {
                text: options.title,
                style: {
                  fontWeight: 'bold',
                  fontSize: 16,
                },
              },
            },
          };
        }
        if (options.orientation) {
          result.annotations = [
            {
              label: {
                text:
                  '<span style="font-size:28px; font-weight:bold;">%sum ' +
                  options.valueLabel +
                  '</span><br>' +
                  '<span style="font-size:14px; color:#9E9E9E;">' +
                  options.data.name +
                  '</span>',
              },
              position: options.orientation === 'vertical' ? 'top left' : 'right',
            },
          ];
        }
        if (options.data) {
          result.series = [
            {
              shape: {
                label: [
                  {
                    text:
                      (options.data.icon
                        ? '<icon name=%icon size=' + (options.showPercent ? 20 : 40) + ' fill=%fill><br>'
                        : '') +
                      (options.showPercent
                        ? '<span style="color:' +
                          options.color +
                          ';font-size:20px;font-weight:bold">{Math.round(%value*100/' +
                          options.data.maxValue +
                          ')}%</span>'
                        : ''),
                    align: 'center',
                    verticalAlign: 'middle',
                  },
                ],
              },
              color: options.color,
              name: options.data.name,
              attributes: {
                icon: options.data.icon,
                fill: options.color,
              },
              points: [['val', options.data.value]],
            },
          ];
          if (options.valueFormat) {
            result.yAxis = { formatString: options.formatValue };
          }
          if (options.data.maxValue) {
            result.yAxis = {
              scale: { range: [0, options.data.maxValue] },
            };
          }
        }
        return result;
      };

      /**
       * Updates the chart based on provided options.
       * @param options - Widget options
       * @param updateOptions - Update options such as animation.
       */
      CircularGaugeWidget.prototype.options = function (options, updateOptions) {
        var newConfig = this.normalizeOptions(options);
        /* Maintain chart configuration. */
        JSC.merge(this.currentConfig, newConfig);
        /* Update the chart. */
        this.chart.options(newConfig, updateOptions);
      };

      /* USING THE WIDGET */

      chart1 = new CircularGaugeWidget('chartDiv1', {
        orientation: 'horizontal',
        data: { name: 'Total Earnings', value: 60567, maxValue: 100000, icon: 'linear/ecommerce/money' },
        valueFormat: 'c0',
        color: '#EF6C00',
        showPercent: false,
      });
      chart2 = new CircularGaugeWidget('chartDiv2', {
        orientation: 'vertical',
        data: { name: 'Sales', value: 584, maxValue: 2000 },
        valueFormat: 'n0',
        color: '#FBC02D',
        showPercent: false,
      });

      chart3 = new CircularGaugeWidget('chartDiv3', {
        orientation: 'horizontal',
        data: { name: 'Users', value: 16654, maxValue: 20000, icon: 'linearicons/user' },
        valueFormat: 'n0',
        color: '#00B8D4',
        showPercent: true,
      });
    </script>
  </body>
</html>
